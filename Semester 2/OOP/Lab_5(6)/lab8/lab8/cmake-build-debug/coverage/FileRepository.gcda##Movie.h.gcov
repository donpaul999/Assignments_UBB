        -:    0:Source:/Users/paulcolta/Desktop/GitHub/Assignments_FP/Semester 2/OOP/Lab_5(6)/lab8/lab8/./Movie.h
        -:    0:Graph:/Users/paulcolta/Desktop/GitHub/Assignments_FP/Semester 2/OOP/Lab_5(6)/lab8/lab8/cmake-build-debug/CMakeFiles/lab8.dir/FileRepository.gcno
        -:    0:Data:/Users/paulcolta/Desktop/GitHub/Assignments_FP/Semester 2/OOP/Lab_5(6)/lab8/lab8/cmake-build-debug/CMakeFiles/lab8.dir/FileRepository.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:#include <string>
        -:    3:#include <vector>
        -:    4:
    #####:    5:class Movie {
    $$$$$:    5-block  0
    $$$$$:    5-block  1
    $$$$$:    5-block  2
    $$$$$:    5-block  3
        -:    6:private:
        -:    7:    std::string title;
        -:    8:    std::string trailer;
        -:    9:    std::string genre;
        -:   10:    int yearOfRelease;
        -:   11:    int numberOfLikes;
        -:   12:
        -:   13:public:
        -:   14:    Movie(const std::string& title = "", const std::string& genre = "", int yearOfRelease = 2020, int numberOfLikes = 0, const std::string& trailer = "");
        -:   15:    Movie(const Movie& movieToUse);
        -:   16:    void setTitle(const std::string& title);
        -:   17:    void setGenre(const std::string& genre);
        -:   18:    void setYearOfRelease(int yearOfRelease);
        -:   19:    void setNumberOfLikes(int numberOfLikes);
        -:   20:    void setTrailer(const std::string& trailer);
        -:   21:    const std::string& getTitle() const;
        -:   22:    int getYearOfRelease() const;
        -:   23:    const std::string& getGenre() const;
        -:   24:    int getNumberOfLikes() const;
        -:   25:    const std::vector<std::string >explode(const std::string& stringToExplode, const std::string& separatorsUsed);
        -:   26:    const std::string& getTrailer() const;
        -:   27:    bool operator==(const Movie& movieToCheck) const;
        -:   28:    void operator=(const Movie& movieToGetValuesFrom);
        -:   29:    bool operator!=(const Movie& movieToCheck) const;
        -:   30:    std::string getOutputForm() const;
        -:   31:    friend std::ostream& operator<< (std::ostream& outStream, const Movie& movieToOutput);
        -:   32:    friend std::istream& operator>> (std::istream& inStream, Movie& movie);
        -:   33:
        -:   34:};
        -:   35:
        -:   36:
