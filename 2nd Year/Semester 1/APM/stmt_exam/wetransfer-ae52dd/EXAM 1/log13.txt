ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 20

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( 3 < v) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( 3 < v) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 20

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int v;(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
(fork((print(v);(v=v * a;no operation statement)));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=1) }
v=1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0
0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0
0

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:400
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
no operation statement
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
0
1
20
1
20
1
20
1
20
1
20
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1
1
1
1
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
v=1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=1) }
(fork((print(v);v=v * a));v=1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1
1

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
(print(a);no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)));(print(a);no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
for( v=0; v<3; v+=1 ) 
 fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(Type int v;(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
(v=0;while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
(fork((print(v);(v=v * a;no operation statement)));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
fork((print(v);(v=v * a;no operation statement)))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(print(v);(v=v * a;no operation statement))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
while( v < 3) { (fork((print(v);(v=v * a;no operation statement)));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(a);no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
(print(a);no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
(v=v * a;no operation statement)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
no operation statement
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

ExeStack: 
(Type Ref(int) a;(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
Type Ref(int) a
SymTable: 
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='a', expression=20};(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a)))
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
HeapAllocStmt{varName='a', expression=20}
SymTable: 
Key: a, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
(for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a));print(a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
for( v=0; v<3; v+=1 ) 
 fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(Type int v;(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
Type int v
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
(v=0;while( v < 3) { (fork((print(v);v=v * a));v=v + 1) })
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=0
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 
FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 
FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:0
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
(fork((print(v);v=v * a));v=v + 1)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:1
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:20
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
fork((print(v);v=v * a))
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
v=v + 1
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
(print(v);v=v * a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
while( v < 3) { (fork((print(v);v=v * a));v=v + 1) }
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1

FileTable: 

ExeStack: 
v=v * a
print(v)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1

FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
print(a)
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2

FileTable: 

ExeStack: 
v=v * a
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:2
Out: 0
1
2

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:3
Out: 0
1
2
20

FileTable: 

ExeStack: 
SymTable: 
Key: a, Value:RefValue{address=1, locationType=int}
Key: v, Value:40
Out: 0
1
2
20

FileTable: 

