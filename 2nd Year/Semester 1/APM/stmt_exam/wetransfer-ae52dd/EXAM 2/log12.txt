ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1  10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1  1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2  10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2  5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
350

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
350

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
350

FileTable: 

ExeStack: 
(Type Ref(int) v1;(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))))
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
Type Ref(int) v1
SymTable: 
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type Ref(int) v2;(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
Type Ref(int) v2
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int x;(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))))
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
Type int x
SymTable: 
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Type int q;(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))))
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
Type int q
SymTable: 
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v1', expression=20};(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
HeapAllocStmt{varName='v1', expression=20}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=0, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapAllocStmt{varName='v2', expression=30};(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
HeapAllocStmt{varName='v2', expression=30}
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=0, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( x);(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
NewLock( x)
SymTable: 
Key: q, Value:0
Key: x, Value:0
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))));(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
fork((fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(NewLock( q);(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))));(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
NewLock( q)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
fork((Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))));(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x)))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
fork((fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 - 1};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))));(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 - 1}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
fork((Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
Lock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(q);(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v1', expression=v1 * 10};Unlock(x))
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
HeapWriteStmt{varName='v1', expression=v1 * 10}
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 * 10};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(x)
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 * 10}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:0
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(no operation statement;(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
no operation statement
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Lock(x);(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q))))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(HeapWriteStmt{varName='v2', expression=v2 + 5};Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
Lock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
HeapWriteStmt{varName='v2', expression=v2 + 5}
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(print(v1);(Unlock(x);(Lock(q);(print(v2);Unlock(q)))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
print(v1)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 
FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Unlock(x);(Lock(q);(print(v2);Unlock(q))))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
Unlock(x)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(Lock(q);(print(v2);Unlock(q)))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
Lock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
(print(v2);Unlock(q))
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
print(v2)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
Unlock(q)
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

ExeStack: 
SymTable: 
Key: q, Value:2
Key: x, Value:1
Key: v1, Value:RefValue{address=1, locationType=int}
Key: v2, Value:RefValue{address=2, locationType=int}
Out: 190
305

FileTable: 

